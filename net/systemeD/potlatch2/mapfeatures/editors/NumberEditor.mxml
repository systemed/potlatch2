<?xml version="1.0" encoding="utf-8"?>
<edit:SingleTagEditor
	xmlns:fx="http://ns.adobe.com/mxml/2009"
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:edit="net.systemeD.potlatch2.mapfeatures.editors.*"
	xmlns:flexlib="flexlib.controls.*"
	width="100%"
	helpContent="{fieldDescription ? help : null}" 
	label="{fieldName}:"
    styleName="titledEditor">

      <mx:HBox horizontalGap="3" verticalAlign="middle">
          <!-- it would be great if the numericStepper showed something other than zero when unset -->
          <mx:NumericStepper id="input"
                  minimum="{minimum}" maximum="{maximum}"
                  stepSize="{stepSize}"
                  value="{translatedValue}"
                  enabled="{isValueValid}"
                  change="value = input.value.toString()" />
          <mx:LinkButton label="Clear" click="clear()" enabled="{isValueClearable}" />
          <mx:Label text="{prompt}" visible="{value == null || value == ''}" includeInLayout="{value == null || value == ''}" styleName="promptText"/>
          <mx:Label text="{warning}" visible="{!isValueValid}" includeInLayout="{!isValueValid}" styleName="warningText" />
      </mx:HBox>

  <fx:Script><![CDATA[
    [Bindable(event="factory_set")]
    protected function get prompt():String {
        return _factory == null ? null : NumberEditorFactory(_factory).notPresentText;
    }
    
    [Bindable(event="factory_set")]
    protected function get warning():String {
        return _factory == null ? null : NumberEditorFactory(_factory).notValidText;
    }

    [Bindable(event="factory_set")]
    public function get minimum():Number {
        return NumberEditorFactory(_factory) == null ? 0 : NumberEditorFactory(_factory).minimum;
    }

    [Bindable(event="factory_set")]
    public function get maximum():Number {
        return NumberEditorFactory(_factory) == null ? 100 : NumberEditorFactory(_factory).maximum;
    }

    [Bindable(event="factory_set")]
    public function get stepSize():Number {
        return NumberEditorFactory(_factory) == null ? 1 : NumberEditorFactory(_factory).stepSize;
    }

    [Bindable(event="tag_changed")]
    private function get translatedValue():Number {
        var validatedValue:Number = getValidatedValue();
        return validatedValue;
    }

    [Bindable(event="tag_changed")]
    private function get isValueValid():Boolean {
        var validatedValue:Number = getValidatedValue();
        return !(isNaN(validatedValue) && value != null && value != "");
    }
    
    [Bindable(event="tag_changed")]
    private function get isValueClearable():Boolean {
        var validatedValue:Number = getValidatedValue();
        return !isNaN(validatedValue);
    }

    private function getValidatedValue():Number {
        var valueStr:String = value;
        if ( valueStr == null || valueStr == "" )
            return Number.NaN;

        var parsed:Number = parseFloat(value);
        if ( isNaN(parsed) || parsed < minimum || parsed > maximum )
            return Number.NaN;
        return parsed;
    }
    
    private function clear():void {
        value = null;
    }
	
  ]]></fx:Script>
</edit:SingleTagEditor>

